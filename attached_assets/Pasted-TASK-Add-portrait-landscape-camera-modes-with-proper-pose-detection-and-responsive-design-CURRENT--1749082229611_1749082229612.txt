TASK: Add portrait/landscape camera modes with proper pose detection and responsive design

CURRENT ISSUE: Camera is always 16:9 aspect ratio. Need to add 9:16 portrait mode and 16:9 landscape mode with working pose detection and responsive layout.

PROBLEMS TO SOLVE:
- Camera aspect ratio doesn't change between modes
- Portrait mode has initialization timing issues (doesn't detect landmarks immediately)  
- Coordinate mapping may break in portrait mode
- Must maintain responsive design principles

STEP 1: ADD ASPECT RATIO SWITCHING TO CameraView.tsx
- Add isPortraitMode prop to CameraViewProps interface with default true
- Add getCameraClasses() function that returns:
  - Portrait: 'aspect-[3/4] max-h-[500px] w-full max-w-[375px] mx-auto'
  - Landscape: 'aspect-video'
- Replace all hardcoded 'aspect-video' classes with getCameraClasses()
- This affects inactive, error, pending, and active camera container divs

STEP 2: PASS PORTRAIT PROP FROM AnalysisInterface.tsx  
- Keep responsive grid layout: 'grid-cols-1 lg:grid-cols-2' (NOT conditional)
- Pass isPortraitMode prop to CameraView component
- Default isPortraitMode to true (portrait mode)
- Keep existing toggle button functionality

STEP 3: FIX MEDIAPIPE INITIALIZATION IN PoseOverlay.tsx
- Add isPortraitMode as prop to PoseOverlayProps 
- Add isPortraitMode to useEffect dependencies to force reinitialization on mode change
- Ensure MediaPipe gets fresh start when aspect ratio changes
- This fixes the timing issue where portrait mode doesn't detect initially

STEP 4: FIX COORDINATE MAPPING FOR PORTRAIT MODE
- In drawPose function, when setting canvas size, check if container uses object-cover cropping
- For portrait mode: calculate visible area within 1280x720 video that fits 3:4 container
- Transform MediaPipe landmarks (0-1 normalized to full video) to visible cropped area coordinates
- Apply scaling and offset based on aspect ratio difference
- Keep landscape mode coordinate mapping unchanged

STEP 5: MAINTAIN RESPONSIVE DESIGN
- Always use 'grid-cols-1 lg:grid-cols-2' for responsive layout  
- Portrait/landscape only affects camera aspect ratio, not layout stacking
- On mobile: stacks vertically regardless of camera orientation
- On desktop: side-by-side regardless of camera orientation

RESULT: Users get portrait (9:16) and landscape (16:9) camera modes with working pose detection, proper responsive design, and portrait as default mode.

CRITICAL: Focus on coordinate transformation math for portrait mode - this is the key technical challenge. The visible area in portrait mode is a cropped section of the full 1280x720 video feed.